# HTTP Server
server:
    port: 8080

spring:
    jpa:
       database: MYSQL

# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
    datasource:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/amy_security?useSSL=false
        username: java
        password: 19-FlemanticO-02

# Show or not log for each sql query
        show-sql: true

# Hibernate ddl auto (create, create-drop, update), *****SOLO DESARROLLO*****
        hibernate:
            ddl-auto: update

#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Naming strategy
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5Dialect

# Keep the connection alive if idle for a long time (needed in production)
##spring.datasource.testWhileIdle = true
##spring.datasource.validationQuery = SELECT 1
#spring.datasource.dbcp2.validation-query=SELECT 1

#Se agrega desde SConfiguration
##spring.security.user.name=java
##spring.security.user.password=123


#Personalizacion del log:
    main:
        banner-mode: off 
    output:
        ansi:
            enabled: ALWAYS
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN: -%5p} %m%n
#logging.pattern.console=%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n
#Default
#logging:
#    pattern:
#        console: %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

#Security
#jwt.secret = secret
jwt:
    secret: secret
    expiration: 36000

##TODO
##ver porque da error
##spring.jpa.hibernate.naming.physical-strategy=org.hibernate.cfg.ImprovedNamingStrategy
